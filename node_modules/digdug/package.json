{
  "_args": [
    [
      {
        "raw": "digdug@github:theintern/digdug",
        "scope": null,
        "escapedName": "digdug",
        "name": "digdug",
        "rawSpec": "github:theintern/digdug",
        "spec": "github:theintern/digdug",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:theintern/digdug.git",
          "sshUrl": "git+ssh://git@github.com/theintern/digdug.git",
          "httpsUrl": "git+https://github.com/theintern/digdug.git",
          "gitUrl": "git://github.com/theintern/digdug.git",
          "shortcut": "github:theintern/digdug",
          "directUrl": "https://raw.githubusercontent.com/theintern/digdug/master/package.json"
        }
      },
      "/Users/chasecook/selenium-internjs"
    ]
  ],
  "_from": "theintern/digdug",
  "_id": "digdug@1.6.0-pre",
  "_inCache": true,
  "_location": "/digdug",
  "_phantomChildren": {},
  "_requested": {
    "raw": "digdug@github:theintern/digdug",
    "scope": null,
    "escapedName": "digdug",
    "name": "digdug",
    "rawSpec": "github:theintern/digdug",
    "spec": "github:theintern/digdug",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:theintern/digdug.git",
      "sshUrl": "git+ssh://git@github.com/theintern/digdug.git",
      "httpsUrl": "git+https://github.com/theintern/digdug.git",
      "gitUrl": "git://github.com/theintern/digdug.git",
      "shortcut": "github:theintern/digdug",
      "directUrl": "https://raw.githubusercontent.com/theintern/digdug/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/theintern/digdug.git#7a43235f1e2e05ea8a3391f8b3cd941a644909e2",
  "_shasum": "aa72844e6c55048e48d071c87714b003ecc635fb",
  "_shrinkwrap": null,
  "_spec": "digdug@github:theintern/digdug",
  "_where": "/Users/chasecook/selenium-internjs",
  "bugs": {
    "url": "https://github.com/theintern/digdug/issues"
  },
  "dependencies": {
    "decompress": "3.0.0",
    "dojo": "2.0.0-alpha.7"
  },
  "description": "Dig Dug. A simple abstraction library for downloading and launching WebDriver service tunnels.",
  "devDependencies": {
    "intern": "3.2.3"
  },
  "gitHead": "7a43235f1e2e05ea8a3391f8b3cd941a644909e2",
  "homepage": "https://github.com/theintern/digdug",
  "keywords": [
    "javascript",
    "test",
    "functional",
    "selenium",
    "webdriver",
    "sauce labs",
    "browserstack",
    "testingbot"
  ],
  "license": "BSD-3-Clause",
  "name": "digdug",
  "optionalDependencies": {},
  "readme": "# ディグダグ\n\n[![Build Status](https://travis-ci.org/theintern/digdug.svg?branch=master)](https://travis-ci.org/theintern/digdug)\n[![npm version](https://badge.fury.io/js/digdug.svg)](https://badge.fury.io/js/digdug)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/theintern/digdug.svg)](http://isitmaintained.com/project/theintern/digdug \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/theintern/digdug.svg)](http://isitmaintained.com/project/theintern/digdug \"Percentage of issues still open\")\n\nDig Dug is a simple abstraction library for downloading and launching WebDriver service tunnels and interacting with\nthe REST APIs of these services.\n\nDig Dug can run a local Selenium server, and it supports the following cloud testing services:\n\n* [BrowserStack](http://www.browserstack.com)\n* [CrossBrowserTesting](http://www.crossbrowsertesting.com)\n* [Sauce Labs](http://www.saucelabs.com)\n* [TestingBot](http://www.testingbot.com)\n\n## Configuration\n\nIn many cases, the only configuration you'll need to do to create a tunnel is provide authentication data. This can be provided by setting properties on tunnels or via environment variables. The tunnels use the following environment variables:\n\nTunnel class                | Environment variables\n----------------------------|----------------------------------------------------\n`BrowserStackTunnel`        | `BROWSERSTACK_USERNAME`, `BROWSERSTACK_ACCESS_KEY`\n`CrossBrowserTestingTunnel` | `CBT_USERNAME`, `CBT_APIKEY`\n`SauceLabsTunnel`           | `SAUCE_USERNAME`, `SAUCE_ACCESS_KEY`\n`TestingBotTunnel`          | `TESTINGBOT_KEY`, `TESTINGBOT_SECRET`\n\nOther properties, such as the local port the tunnel should serve on or the URL of a proxy server the tunnel should go through, can be passed to a tunnel constructor or set on a tunnel instance. See the pages for [Tunnel](Tunnel.html) and the tunnel subclasses for available properties.\n\n\n## Usage\n\nTo create a new tunnel, import the desired tunnel class, create a new instance, and call its `start` method. `start` returns a Promise that resolves when the tunnel has successfully started. For example, to create a new Sauce Labs tunnel:\n\n```js\nvar SauceLabsTunnel = require('digdug/SauceLabsTunnel');\nvar tunnel = new SauceLabsTunnel();\ntunnel.start().then(function () {\n\t// interact with the WebDriver server at tunnel.clientUrl\n});\n```\n\nOnce a tunnel has been started, a test runner interacts with it as described in the service's documentation. The Sauce Labs and TestingBot executables start a WebDriver server on localhost that the test client communicates with. To interact with BrowserStack, a test client will connect to `hub.browserstack.com` after the tunnel has started.\n\nThe tunnel classes also provide a `sendJobState` convenience method to let the remote service know whether a test session passed or failed. This method accepts a session ID and an object containing service-specific data, and it returns a Promise that resolves if the job state was successfully updated.\n\n```js\ntunnel.sendJobState(sessionId, { success: true });\n```\n\nWhen testing is finished, call the tunnel's `stop` method to cleanly shut it down. This method returns a Promise that is resolved when the service tunnel executable has exited.\n\n```js\ntunnel.stop().then(function () {\n\t// the tunnel has been shut down\n});\n```\n\n## API documentation\n\n[View API documentation](https://theintern.github.io/digdug/)\n\n## License\n\nDig Dug is a Dojo Foundation project offered under the [New BSD](LICENSE) license.\n\n© [SitePen, Inc.](http://sitepen.com) and its [contributors](https://github.com/theintern/digdug/graphs/contributors)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/theintern/digdug.git"
  },
  "scripts": {
    "test": "intern-client config=tests/intern"
  },
  "version": "1.6.0-pre"
}
